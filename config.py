"""
–ú–æ–¥—É–ª—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ –∫–æ–Ω—Å—Ç–∞–Ω—Ç
"""

import json
import logging
import sys
from pathlib import Path

# ==== API URLs ====
API_URL = "https://api.open-meteo.com/v1/forecast" 
GEOCODE_URL = "https://geocoding-api.open-meteo.com/v1/search" 
TRANSLATE_API = "https://translate.googleapis.com/translate_a/single" 

# ==== –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º ====
CONFIG_DIR = Path.home() / ".config" / "MyWeatherWidget"
CONFIG_FILE = CONFIG_DIR / "config.json"

# ==== –ò–Ω—Ç–µ—Ä–≤–∞–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ====
WEATHER_INTERVAL_SEC = 10   # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
METRICS_INTERVAL_MS = 500   # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∫–∞–∂–¥—ã–µ 0.5 —Å–µ–∫—É–Ω–¥—ã

# ==== –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ====
ALPHA_DEFAULT = 0.9
CITY_DEFAULT = None

WEATHER_ICONS = {
    0: "‚òÄÔ∏è", 1: "üå§Ô∏è", 2: "‚õÖ", 3: "‚òÅÔ∏è", 
    45: "üå´Ô∏è", 48: "üå´Ô∏è", 
    51: "üå¶Ô∏è", 52: "üåßÔ∏è", 53: "üåßÔ∏è", 54: "üåßÔ∏è", 
    55: "üåßÔ∏è", 56: "üå®Ô∏è", 57: "üå®Ô∏è", 61: "üåßÔ∏è",
    62: "üåßÔ∏è", 63: "üåßÔ∏è", 66: "üå®Ô∏è", 67: "üå®Ô∏è",
    80: "üåßÔ∏è", 81: "üåßÔ∏è", 82: "üåßÔ∏è",
    71: "‚ùÑÔ∏è", 72: "‚ùÑÔ∏è", 73: "‚ùÑÔ∏è", 
    77: "üå®Ô∏è", 85: "‚ùÑÔ∏è", 86: "‚ùÑÔ∏è",
    95: "‚õàÔ∏è", 96: "‚õàÔ∏è", 99: "‚õàÔ∏è"
}

def setup_logging() -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å"""
    logging.basicConfig(
        level=logging.INFO,
        format="%(asctime)s [%(levelname)s] %(message)s",
        handlers=[logging.StreamHandler(sys.stdout)]
    )

def load_config() -> dict:
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–∑ —Ñ–∞–π–ª–∞"""
    CONFIG_DIR.mkdir(parents=True, exist_ok=True)
    
    if not CONFIG_FILE.exists():
        default_config = {
            "city": CITY_DEFAULT,
            "lat": None,
            "lon": None,
            "alpha": ALPHA_DEFAULT
        }
        with CONFIG_FILE.open('w') as f:
            json.dump(default_config, f, indent=2)
        return default_config
        
    with CONFIG_FILE.open('r') as f:
        return json.load(f)

def save_config(cfg: dict) -> None:
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ —Ñ–∞–π–ª"""
    with CONFIG_FILE.open('w') as f:
        json.dump(cfg, f, indent=2)